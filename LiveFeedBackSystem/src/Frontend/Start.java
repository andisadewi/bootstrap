package Frontend;

import java.io.File;
import java.sql.SQLException;
import java.sql.Statement;

import LogIn.ldap;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.PreserveOnRefresh;
import com.vaadin.data.util.TextFileProperty;
import com.vaadin.event.ShortcutAction.KeyCode;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.FileDownloader;
import com.vaadin.server.FileResource;
import com.vaadin.server.ThemeResource;
import com.vaadin.server.VaadinService;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Image;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;
import com.vaadin.ui.themes.Reindeer;

import Backend.User;
import Backend.UserRole; 

@PreserveOnRefresh
public class Start extends CustomComponent implements View{

	/**
	 * 
	 */
	private static final long serialVersionUID = 4984332727077324949L;
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private VerticalLayout mainVertical;
	@AutoGenerated
	private HorizontalLayout bannerHorizontal;
	@AutoGenerated
	private VerticalLayout einloggVertical;
	@AutoGenerated
	private Label bannerEinloggen;
	@AutoGenerated 
	private Button einloggButton; 
	@AutoGenerated
	private Label bannerTop;
	private MainUI main;
	private User userNew;  
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	private String basepath = VaadinService.getCurrent().getBaseDirectory().getAbsolutePath();
	
	public Start(MainUI main) {
		this.main=main;
		buildMainLayout();
		setCompositionRoot(mainLayout);

		
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100.0%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("150.0%");
		
		// mainVertical
				mainVertical = buildmainVertical();
				mainLayout.addComponent(mainVertical, "top:0.0px;left:0.0px;right:-2.0px;bottom:-2.0px");
				
		return mainLayout;
	}


	@AutoGenerated
	private VerticalLayout buildmainVertical() {
		// common part: create layout
		mainVertical = new VerticalLayout();
		mainVertical.setImmediate(false);
		mainVertical.setWidth("100.0%");
		mainVertical.setMargin(false);
		
		// bannerHorizontal
		bannerHorizontal = buildbannerHorizontal();
		
		
		// TextViewer
		Label text = new Label("",ContentMode.HTML);
		text.setWidth("30.0%");
		text.setPropertyDataSource(new TextFileProperty(new File(basepath+"/VAADIN/themes/Html/startSite.html")));
		Image vorlesung = new Image(null,new ThemeResource("img/vorlesung.jpg"));
		
		
		mainVertical.addComponent(bannerHorizontal);
		mainVertical.addComponent(text);
		mainVertical.addComponent(vorlesung);
		mainVertical.setComponentAlignment(text, Alignment.TOP_CENTER );
		mainVertical.setComponentAlignment(vorlesung, Alignment.TOP_CENTER );
		mainVertical.setExpandRatio(text, 1.0f);
		return mainVertical;
	}

	@AutoGenerated
	private HorizontalLayout buildbannerHorizontal() {
		// common part: create layout
		bannerHorizontal = new HorizontalLayout();
		bannerHorizontal.setImmediate(false);
		bannerHorizontal.setWidth("100.0%");
		bannerHorizontal.setHeight("80px");
		bannerHorizontal.setMargin(false);
		
		Image logo = new Image(null,new ThemeResource("img/tu-logo.gif"));
		
		// bannerTop
		bannerTop = new Label();
		bannerTop.setImmediate(false);
		bannerTop.setWidth("100%");
		bannerTop.setHeight("100%");
		bannerTop.setContentMode(ContentMode.PREFORMATTED);
		bannerTop.setValue("\n          Live-Feedback-System");
		// einloggVertical
		einloggVertical = buildeinloggVertical();
		
		bannerHorizontal.addComponent(logo);
		bannerHorizontal.addComponent(bannerTop);
		bannerHorizontal.addComponent(einloggVertical);
		
		bannerHorizontal.setExpandRatio(bannerTop, 1.0f);
		bannerHorizontal.addStyleName("backcolor");
		bannerTop.addStyleName("title");
		
		return bannerHorizontal;
	} 

	@AutoGenerated
	private VerticalLayout buildeinloggVertical() {
		// common part: create layout
		einloggVertical = new VerticalLayout();
		einloggVertical.setImmediate(false);
		einloggVertical.setWidth("120px");
		einloggVertical.setHeight("100.0%");
		einloggVertical.setMargin(false);
		
		//login window 
		
		final Window loginWindow = new Window("Login");
		loginWindow.setModal(true);
		loginWindow.setClosable(false);
		loginWindow.setWidth("220px");
		loginWindow.addStyleName(Reindeer.WINDOW_LIGHT);
		VerticalLayout vertLay = new VerticalLayout();
		final TextField user = new TextField("username");
		user.focus();
		final PasswordField passw = new PasswordField("password");
		Button buttonLogin = new Button("einloggen");
		buttonLogin.setClickShortcut(KeyCode.ENTER);
		buttonLogin.addClickListener(new Button.ClickListener() {
			
			/**
			 * 
			 */
			private static final long serialVersionUID = 8029006144811849771L;

			@Override
			public void buttonClick(ClickEvent event) {
				loginWindow.close();
				String pw = passw.getValue();
				String usr= user.getValue();
				
		
				loginWindow.close();
				Statement stm;


				//if (new ldap().authentification(usr,pw)){

					try{
						stm = Backend.ConnectionManager.Instance.createStatement();
						userNew = User.select(stm, usr);
						System.out.println(User.selectRolle(stm, usr).toString());
					}catch(Exception e){
						e.printStackTrace();
						try {
							stm = Backend.ConnectionManager.Instance.createStatement();
							userNew = new User(usr, UserRole.Student.getValue());
							userNew.insert(stm);
						} catch (SQLException e2) {
							e2.printStackTrace();
						}
					}
					Statement stm2;
					try{
						stm2 = Backend.ConnectionManager.Instance.createStatement();
						main.setLoggedInUser(usr);
						main.setRole(User.selectRolle(stm2, usr).selectroleName(stm2, User.selectRolle(stm2,usr).getroleID()));
						if(main.getRole().equals("Admin"))
						main.getNavigator().navigateTo(MainUI.ADMIN);
						else main.getNavigator().navigateTo(MainUI.FIRSTVIEW);
					}catch(Exception e3){ e3.printStackTrace();}
						
					
//				}else {
//					Notification.show("Fehlerhafter Login", Type.ERROR_MESSAGE );
//				}
				loginWindow.close();
			}
		});
		
		loginWindow.setContent(vertLay);
		vertLay.addComponent(user);
		vertLay.setComponentAlignment(user, Alignment.TOP_CENTER);
		vertLay.addComponent(passw);
		vertLay.setComponentAlignment(passw, Alignment.TOP_CENTER);
		vertLay.addComponent(buttonLogin);
		vertLay.setComponentAlignment(buttonLogin, Alignment.TOP_CENTER);
		loginWindow.center();
		
		
		// einloggButton
		einloggButton = new Button("Login");
		einloggButton.addStyleName(Reindeer.BUTTON_LINK);
		einloggButton.addClickListener(new Button.ClickListener() {
		
			/**
			 * 
			 */
			private static final long serialVersionUID = 7254780620074007293L;

			@Override
			public void buttonClick(ClickEvent event) {
				main.addWindow(loginWindow);
				
			}
		});
		einloggButton.setImmediate(false);
		
		
		// bannerEinloggen
		bannerEinloggen = new Label();
		bannerEinloggen.setImmediate(false);
		bannerEinloggen.setWidth("100.0%");
		bannerEinloggen.setHeight("100.0%");
		bannerEinloggen.setContentMode(ContentMode.PREFORMATTED);
		bannerEinloggen.setValue("Hier gehts zum");
		einloggVertical.addComponent(bannerEinloggen);
		einloggVertical.addComponent(einloggButton);
		bannerEinloggen.addStyleName("smallwhite");
		
		
		Button downloadManual = new Button("Benutzerhandbuch");
		FileResource res = new FileResource(new File(System.getProperty("user.dir") + "/Benutzerhandbuch.pdf"));
		FileDownloader fd = new FileDownloader(res);
		fd.extend(downloadManual);
		einloggVertical.addComponent(downloadManual);
		downloadManual.addStyleName(Reindeer.BUTTON_LINK);
		
		
		return einloggVertical;
	}

	@Override
	public void enter(ViewChangeEvent event) {
	
		
	}

}
