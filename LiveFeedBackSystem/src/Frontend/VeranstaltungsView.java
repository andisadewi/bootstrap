package Frontend;

import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import Backend.Rights;
import Backend.Roles;
import Designs.*;
import DesignsDo.*;
import DesignsStu.*;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.PreserveOnRefresh;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.VerticalLayout;
@PreserveOnRefresh
public class VeranstaltungsView extends CustomComponent implements View {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5938148448350431041L;
	@AutoGenerated
	//generell
	private AbsoluteLayout mainLayout;
	private VerticalLayout mainVertical;
	private MainUI main;
	//banner
	private BannerTop banner;
	//unter dem Banner

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 * @param mainUI  
	 */
	public VeranstaltungsView(MainUI main) {
		this.main=main;
	} 
 
	@AutoGenerated
	private void buildMainLayout() {
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		// mainVertical
		mainVertical = buildMainVertical();
		mainLayout.addComponent(mainVertical, "top:0.0px;left:0.0px;right:-2.0px;bottom:-2.0px");
			
	}

	private VerticalLayout buildMainVertical(){
		// common part: create layout
			mainVertical = new VerticalLayout();
			mainVertical.setImmediate(false);
			mainVertical.setWidth("100.0%");
			mainVertical.setHeight("100.0%");
			mainVertical.setMargin(false);
			 	
		//banner
			banner= new BannerTop(main);
			mainVertical.addComponent(banner);
	
		
		if (getRightForEdit()) {
			System.out.println("rights");
			VeranstaltungsOverViewDo veranstaltungen = new VeranstaltungsOverViewDo(main);
			veranstaltungen.setWidth("666px");
			mainVertical.addComponent(veranstaltungen);
			mainVertical.setComponentAlignment(veranstaltungen, Alignment.TOP_CENTER);
			mainVertical.setExpandRatio(veranstaltungen, 8.0f);
		
		}else{
			System.out.println("no rights");
			VeranstaltungsOverViewStu veranstaltungen = new VeranstaltungsOverViewStu(main);
			veranstaltungen.setWidth("666px");
			mainVertical.addComponent(veranstaltungen);
			mainVertical.setComponentAlignment(veranstaltungen, Alignment.TOP_CENTER);
			mainVertical.setExpandRatio(veranstaltungen, 8.0f);	
			}
		
	
		return mainVertical;
	}
	@Override
	public void enter(ViewChangeEvent event) {
		if (main.getLoggedInUser()==null) main.getNavigator().navigateTo(MainUI.LOGIN);
		System.out.println("Veranstaltungen");
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	private boolean getRightForEdit(){
		if (main.getRole().equals("Professor")) return true;
		Statement stm;
		try {
			stm = Backend.ConnectionManager.Instance.createStatement();
			Roles roles = Roles.select(stm, main.getLoggedInUser());
			stm = Backend.ConnectionManager.Instance.createStatement();
			ArrayList<Rights> rights= Rights.selectRights(stm, roles.getroleID());
			
			for (int i=0;i<rights.size();i++){
				if (rights.get(i).getId()==2)return true;
			}
		return false;
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return false;
	}
}
