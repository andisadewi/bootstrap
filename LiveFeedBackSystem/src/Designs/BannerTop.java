package Designs;
/*
 * Das eingeloggte Banner auf jeder Seite
 * 
 */
import java.io.File;

import Frontend.MainUI;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.FileDownloader;
import com.vaadin.server.FileResource;
import com.vaadin.server.Resource;
import com.vaadin.server.ThemeResource;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Image;
import com.vaadin.ui.Label;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.themes.Reindeer;

public class BannerTop extends CustomComponent{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1623053447578800103L;
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	//generell
	@AutoGenerated
	private AbsoluteLayout mainLayout;
	private MainUI main;
	//banner
	private HorizontalLayout bannerHorizontal;
	private Label bannerTop;
	private VerticalLayout ausloggVertical;
	private Button ausloggButton;
	private Label bannerAusloggen; 
  
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	
	public BannerTop(MainUI main) {
		this.main=main;
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
	}

	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("80px");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("80px");
		// mainVertical
		bannerHorizontal = buildbannerHorizontal();
		mainLayout.addComponent(bannerHorizontal, "top:0.0px;left:0.0px;right:-2.0px;bottom:-2.0px");
		
		return mainLayout;
	}
	
	private HorizontalLayout buildbannerHorizontal() {
		// common part: create layout
		bannerHorizontal = new HorizontalLayout();
		bannerHorizontal.setImmediate(false);
		bannerHorizontal.setWidth("100.0%");
		bannerHorizontal.setHeight("80px");
		bannerHorizontal.setMargin(false);
		
		Image logo = new Image(null,new ThemeResource("img/tu-logo.gif"));		
		// bannerTop
		bannerTop = new Label();
		bannerTop.setImmediate(false);
		bannerTop.setWidth("100%");
		bannerTop.setHeight("80px");
		bannerTop.setContentMode(ContentMode.PREFORMATTED);
		bannerTop.setValue("\n          Live-Feedback-System");
		// ausloggVertical
		ausloggVertical = buildAusloggVertical();
		
		bannerHorizontal.addComponent(logo);
		bannerHorizontal.addComponent(bannerTop);
		bannerHorizontal.addComponent(ausloggVertical);
		
		bannerHorizontal.setExpandRatio(bannerTop, 1.0f);
		bannerHorizontal.addStyleName("backcolor");
		bannerTop.addStyleName("title");
		
		return bannerHorizontal;
	} 
	private VerticalLayout buildAusloggVertical() {
		// common part: create layout
		ausloggVertical = new VerticalLayout();
		ausloggVertical.setImmediate(false);
		ausloggVertical.setWidth("120px");
		ausloggVertical.setHeight("100.0%");
		ausloggVertical.setMargin(false);
		
	
	
		
		// ausloggButton
		ausloggButton = new Button("Ausloggen");
		ausloggButton.addStyleName(Reindeer.BUTTON_LINK);
		ausloggButton.addClickListener(new Button.ClickListener() {
		
			/**
			 * 
			 */
			private static final long serialVersionUID = 1352642061053820925L;

			@Override
			public void buttonClick(ClickEvent event) {
				main.setLoggedInUser(null);
				main.setRole(null);
				main.setVeranstaltung(0);
				main.getNavigator().navigateTo(MainUI.LOGIN);
			}
		});
		ausloggButton.setImmediate(false);
		
		
		// bannerAusloggen
		bannerAusloggen = new Label();
		bannerAusloggen.setImmediate(false);
		bannerAusloggen.setWidth("100.0%");
		bannerAusloggen.setHeight("100.0%");
		bannerAusloggen.setContentMode(ContentMode.PREFORMATTED);
		bannerAusloggen.setValue(main.getLoggedInUser()+",");
		ausloggVertical.addComponent(bannerAusloggen);
		ausloggVertical.addComponent(ausloggButton);
		bannerAusloggen.addStyleName("smallwhite");
		
		Button downloadManual = new Button("Benutzerhandbuch");
		FileResource res = new FileResource(new File(System.getProperty("user.dir") + "/Benutzerhandbuch.pdf"));
		FileDownloader fd = new FileDownloader(res);
		fd.extend(downloadManual);
		ausloggVertical.addComponent(downloadManual);
		downloadManual.addStyleName(Reindeer.BUTTON_LINK);
		
		
		
		
		
		return ausloggVertical;
	}
}